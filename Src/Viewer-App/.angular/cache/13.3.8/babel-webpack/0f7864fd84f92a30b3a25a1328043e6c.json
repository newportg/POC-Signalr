{"ast":null,"code":"\"use strict\"; // Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\NEWPORTG\\\\source\\\\Personal\\\\Azure Functions\\\\POC-Sendmail\\\\Src\\\\Viewer-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGlobalThis = exports.getErrorString = exports.constructUserAgent = exports.getUserAgentHeader = exports.ConsoleLogger = exports.SubjectSubscription = exports.createLogger = exports.sendMessage = exports.isArrayBuffer = exports.formatArrayBuffer = exports.getDataDetail = exports.Platform = exports.Arg = exports.VERSION = void 0;\n\nconst ILogger_1 = require(\"./ILogger\");\n\nconst Loggers_1 = require(\"./Loggers\"); // Version token that will be replaced by the prepack command\n\n/** The version of the SignalR client. */\n\n\nexports.VERSION = \"7.0.5\";\n/** @private */\n\nclass Arg {\n  static isRequired(val, name) {\n    if (val === null || val === undefined) {\n      throw new Error(`The '${name}' argument is required.`);\n    }\n  }\n\n  static isNotEmpty(val, name) {\n    if (!val || val.match(/^\\s*$/)) {\n      throw new Error(`The '${name}' argument should not be empty.`);\n    }\n  }\n\n  static isIn(val, values, name) {\n    // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n    if (!(val in values)) {\n      throw new Error(`Unknown ${name} value: ${val}.`);\n    }\n  }\n\n}\n\nexports.Arg = Arg;\n/** @private */\n\nclass Platform {\n  // react-native has a window but no document so we should check both\n  static get isBrowser() {\n    return typeof window === \"object\" && typeof window.document === \"object\";\n  } // WebWorkers don't have a window object so the isBrowser check would fail\n\n\n  static get isWebWorker() {\n    return typeof self === \"object\" && \"importScripts\" in self;\n  } // react-native has a window but no document\n\n\n  static get isReactNative() {\n    return typeof window === \"object\" && typeof window.document === \"undefined\";\n  } // Node apps shouldn't have a window object, but WebWorkers don't either\n  // so we need to check for both WebWorker and window\n\n\n  static get isNode() {\n    return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\n  }\n\n}\n\nexports.Platform = Platform;\n/** @private */\n\nfunction getDataDetail(data, includeContent) {\n  let detail = \"\";\n\n  if (isArrayBuffer(data)) {\n    detail = `Binary data of length ${data.byteLength}`;\n\n    if (includeContent) {\n      detail += `. Content: '${formatArrayBuffer(data)}'`;\n    }\n  } else if (typeof data === \"string\") {\n    detail = `String data of length ${data.length}`;\n\n    if (includeContent) {\n      detail += `. Content: '${data}'`;\n    }\n  }\n\n  return detail;\n}\n\nexports.getDataDetail = getDataDetail;\n/** @private */\n\nfunction formatArrayBuffer(data) {\n  const view = new Uint8Array(data); // Uint8Array.map only supports returning another Uint8Array?\n\n  let str = \"\";\n  view.forEach(num => {\n    const pad = num < 16 ? \"0\" : \"\";\n    str += `0x${pad}${num.toString(16)} `;\n  }); // Trim of trailing space.\n\n  return str.substr(0, str.length - 1);\n}\n\nexports.formatArrayBuffer = formatArrayBuffer; // Also in signalr-protocol-msgpack/Utils.ts\n\n/** @private */\n\nfunction isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer || // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n\nexports.isArrayBuffer = isArrayBuffer;\n/** @private */\n\nfunction sendMessage(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _sendMessage.apply(this, arguments);\n}\n\nfunction _sendMessage() {\n  _sendMessage = _asyncToGenerator(function* (logger, transportName, httpClient, url, content, options) {\n    const headers = {};\n    const [name, value] = getUserAgentHeader();\n    headers[name] = value;\n    logger.log(ILogger_1.LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n    const response = yield httpClient.post(url, {\n      content,\n      headers: { ...headers,\n        ...options.headers\n      },\n      responseType,\n      timeout: options.timeout,\n      withCredentials: options.withCredentials\n    });\n    logger.log(ILogger_1.LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\n  });\n  return _sendMessage.apply(this, arguments);\n}\n\nexports.sendMessage = sendMessage;\n/** @private */\n\nfunction createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(ILogger_1.LogLevel.Information);\n  }\n\n  if (logger === null) {\n    return Loggers_1.NullLogger.instance;\n  }\n\n  if (logger.log !== undefined) {\n    return logger;\n  }\n\n  return new ConsoleLogger(logger);\n}\n\nexports.createLogger = createLogger;\n/** @private */\n\nclass SubjectSubscription {\n  constructor(subject, observer) {\n    this._subject = subject;\n    this._observer = observer;\n  }\n\n  dispose() {\n    const index = this._subject.observers.indexOf(this._observer);\n\n    if (index > -1) {\n      this._subject.observers.splice(index, 1);\n    }\n\n    if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\n      this._subject.cancelCallback().catch(_ => {});\n    }\n  }\n\n}\n\nexports.SubjectSubscription = SubjectSubscription;\n/** @private */\n\nclass ConsoleLogger {\n  constructor(minimumLogLevel) {\n    this._minLevel = minimumLogLevel;\n    this.out = console;\n  }\n\n  log(logLevel, message) {\n    if (logLevel >= this._minLevel) {\n      const msg = `[${new Date().toISOString()}] ${ILogger_1.LogLevel[logLevel]}: ${message}`;\n\n      switch (logLevel) {\n        case ILogger_1.LogLevel.Critical:\n        case ILogger_1.LogLevel.Error:\n          this.out.error(msg);\n          break;\n\n        case ILogger_1.LogLevel.Warning:\n          this.out.warn(msg);\n          break;\n\n        case ILogger_1.LogLevel.Information:\n          this.out.info(msg);\n          break;\n\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          this.out.log(msg);\n          break;\n      }\n    }\n  }\n\n}\n\nexports.ConsoleLogger = ConsoleLogger;\n/** @private */\n\nfunction getUserAgentHeader() {\n  let userAgentHeaderName = \"X-SignalR-User-Agent\";\n\n  if (Platform.isNode) {\n    userAgentHeaderName = \"User-Agent\";\n  }\n\n  return [userAgentHeaderName, constructUserAgent(exports.VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n\nexports.getUserAgentHeader = getUserAgentHeader;\n/** @private */\n\nfunction constructUserAgent(version, os, runtime, runtimeVersion) {\n  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n  let userAgent = \"Microsoft SignalR/\";\n  const majorAndMinor = version.split(\".\");\n  userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\n  userAgent += ` (${version}; `;\n\n  if (os && os !== \"\") {\n    userAgent += `${os}; `;\n  } else {\n    userAgent += \"Unknown OS; \";\n  }\n\n  userAgent += `${runtime}`;\n\n  if (runtimeVersion) {\n    userAgent += `; ${runtimeVersion}`;\n  } else {\n    userAgent += \"; Unknown Runtime Version\";\n  }\n\n  userAgent += \")\";\n  return userAgent;\n}\n\nexports.constructUserAgent = constructUserAgent; // eslint-disable-next-line spaced-comment\n\n/*#__PURE__*/\n\nfunction getOsName() {\n  if (Platform.isNode) {\n    switch (process.platform) {\n      case \"win32\":\n        return \"Windows NT\";\n\n      case \"darwin\":\n        return \"macOS\";\n\n      case \"linux\":\n        return \"Linux\";\n\n      default:\n        return process.platform;\n    }\n  } else {\n    return \"\";\n  }\n} // eslint-disable-next-line spaced-comment\n\n/*#__PURE__*/\n\n\nfunction getRuntimeVersion() {\n  if (Platform.isNode) {\n    return process.versions.node;\n  }\n\n  return undefined;\n}\n\nfunction getRuntime() {\n  if (Platform.isNode) {\n    return \"NodeJS\";\n  } else {\n    return \"Browser\";\n  }\n}\n/** @private */\n\n\nfunction getErrorString(e) {\n  if (e.stack) {\n    return e.stack;\n  } else if (e.message) {\n    return e.message;\n  }\n\n  return `${e}`;\n}\n\nexports.getErrorString = getErrorString;\n/** @private */\n\nfunction getGlobalThis() {\n  // globalThis is semi-new and not available in Node until v12\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n\n  throw new Error(\"could not find global\");\n}\n\nexports.getGlobalThis = getGlobalThis;","map":{"version":3,"sources":["C:/Users/NEWPORTG/source/Personal/Azure Functions/POC-Sendmail/node_modules/@microsoft/signalr/dist/cjs/Utils.js"],"names":["Object","defineProperty","exports","value","getGlobalThis","getErrorString","constructUserAgent","getUserAgentHeader","ConsoleLogger","SubjectSubscription","createLogger","sendMessage","isArrayBuffer","formatArrayBuffer","getDataDetail","Platform","Arg","VERSION","ILogger_1","require","Loggers_1","isRequired","val","name","undefined","Error","isNotEmpty","match","isIn","values","isBrowser","window","document","isWebWorker","self","isReactNative","isNode","data","includeContent","detail","byteLength","length","view","Uint8Array","str","forEach","num","pad","toString","substr","ArrayBuffer","constructor","logger","transportName","httpClient","url","content","options","headers","log","LogLevel","Trace","logMessageContent","responseType","response","post","timeout","withCredentials","statusCode","Information","NullLogger","instance","subject","observer","_subject","_observer","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","_minLevel","out","console","logLevel","message","msg","Date","toISOString","Critical","error","Warning","warn","info","userAgentHeaderName","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","process","platform","versions","node","e","stack","globalThis","global"],"mappings":"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","sourcesContent":["\"use strict\";\r\n// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getGlobalThis = exports.getErrorString = exports.constructUserAgent = exports.getUserAgentHeader = exports.ConsoleLogger = exports.SubjectSubscription = exports.createLogger = exports.sendMessage = exports.isArrayBuffer = exports.formatArrayBuffer = exports.getDataDetail = exports.Platform = exports.Arg = exports.VERSION = void 0;\r\nconst ILogger_1 = require(\"./ILogger\");\r\nconst Loggers_1 = require(\"./Loggers\");\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexports.VERSION = \"7.0.5\";\r\n/** @private */\r\nclass Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\nexports.Arg = Arg;\r\n/** @private */\r\nclass Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\nexports.Platform = Platform;\r\n/** @private */\r\nfunction getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\nexports.getDataDetail = getDataDetail;\r\n/** @private */\r\nfunction formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\nexports.formatArrayBuffer = formatArrayBuffer;\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nfunction isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\nexports.isArrayBuffer = isArrayBuffer;\r\n/** @private */\r\nasync function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(ILogger_1.LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(ILogger_1.LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\nexports.sendMessage = sendMessage;\r\n/** @private */\r\nfunction createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(ILogger_1.LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return Loggers_1.NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\nexports.createLogger = createLogger;\r\n/** @private */\r\nclass SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\nexports.SubjectSubscription = SubjectSubscription;\r\n/** @private */\r\nclass ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${ILogger_1.LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case ILogger_1.LogLevel.Critical:\r\n                case ILogger_1.LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case ILogger_1.LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case ILogger_1.LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ConsoleLogger = ConsoleLogger;\r\n/** @private */\r\nfunction getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(exports.VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\nexports.getUserAgentHeader = getUserAgentHeader;\r\n/** @private */\r\nfunction constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\nexports.constructUserAgent = constructUserAgent;\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nfunction getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\nexports.getErrorString = getErrorString;\r\n/** @private */\r\nfunction getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\nexports.getGlobalThis = getGlobalThis;\r\n"]},"metadata":{},"sourceType":"script"}